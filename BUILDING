Build(SRecord)                                                  Build(SRecord)



[1mNAME[0m
        How to build SRecord

[1mSPACE REQUIREMENTS[0m
        You will need about 3MB to unpack and build the [4mSRecord[24m package.  Your
        milage may vary.

[1mBEFORE YOU START[0m
        There are a few pieces of software you may want to fetch and install
        before you proceed with your installation of SRecord.

        GNU Groff
                The documentation for the [4mSRecord[24m package was prepared using
                the GNU Groff package (version 1.14 or later).  This
                distribution includes full documentation, which may be
                processed into PostScript or DVI files at install time - if
                GNU Groff has been installed.

        GCC     You may also want to consider fetching and installing the GNU
                C Compiler if you have not done so already.  This is not
                essential.  SRecord was developed using the GNU C++ compiler,
                and the GNU C++ libraries.

        The GNU FTP archives may be found at ftp.gnu.org, and are mirrored
        around the world.

[1mSITE CONFIGURATION[0m
        The [1mSRecord [22mpackage is configured using the [4mconfigure[24m program included
        in this distribution.

        The [4mconfigure[24m shell script attempts to guess correct values for
        various system-dependent variables used during compilation, and
        creates the [4mMakefile[24m and [4minclude/config.h[24m files.  It also creates a
        shell script [4mconfig.status[24m that you can run in the future to recreate
        the current configuration.

        Normally, you just [4mcd[24m to the directory containing [4mSRecord[24m's source
        code and then type
                [1m% [22m./configure
                [4m...lots[24m [4mof[24m [4moutput...[0m
                [1m%[0m
        If you're using [4mcsh[24m on an old version of System V, you might need to
        type
                [1m% [22msh configure
                [4m...lots[24m [4mof[24m [4moutput...[0m
                [1m%[0m
        instead to prevent [4mcsh[24m from trying to execute [4mconfigure[24m itself.

        Running [4mconfigure[24m takes a minute or two.  While it is running, it
        prints some messages that tell what it is doing.  If you don't want to
        see the messages, run [4mconfigure[24m using the quiet option; for example,
                [1m% [22m./configure --quiet
                %

        To compile the [1mSRecord [22mpackage in a different directory from the one
        containing the source code, you must use a version of [4mmake[24m that
        supports the [4mVPATH[24m [4mvariable,[24m such as [4mGNU[24m [4mmake[24m.  [4mcd[24m to the directory
        where you want the object files and executables to go and run the
        [4mconfigure[24m script.  [4mconfigure[24m automatically checks for the source code
        in the directory that [4mconfigure[24m is in and in [4m..[24m  (the parent
        directory).  If for some reason [4mconfigure[24m is not in the source code
        directory that you are configuring, then it will report that it can't
        find the source code.  In that case, run [4mconfigure[24m with the option
        --srcdir=[4mDIR[24m, where [4mDIR[24m is the directory that contains the source
        code.

        By default, [4mconfigure[24m will arrange for the [4mmake[24m [4minstall[24m command to
        install the [1mSRecord [22mpackage's files in [4m/usr/local/bin[24m, and
        [4m/usr/local/man[24m.  There are options which allow you to control the
        placement of these files.

        --prefix=[4mPATH[0m
                This specifies the path prefix to be used in the installation.
                Defaults to [4m/usr/local[24m unless otherwise specified.

        --exec-prefix=[4mPATH[0m
                You can specify separate installation prefixes for
                architecture-specific files files.  Defaults to [4m${prefix}[0m
                unless otherwise specified.

        --bindir=[4mPATH[0m
                This directory contains executable programs.  On a network,
                this directory may be shared between machines with identical
                hardware and operating systems; it may be mounted read-only.
                Defaults to [4m${exec_prefix}/bin[24m unless otherwise specified.

        --mandir=[4mPATH[0m
                This directory contains the on-line manual entries.  On a
                network, this directory may be shared between all machines; it
                may be mounted read-only.  Defaults to [4m${prefix}/man[24m unless
                otherwise specified.

        [4mconfigure[24m ignores most other arguments that you give it; use the
        --help option for a complete list.

        On systems that require unusual options for compilation or linking
        that the [4mSRecord[24m package's [4mconfigure[24m script does not know about, you
        can give [4mconfigure[24m initial values for variables by setting them in the
        environment.  In Bourne-compatible shells, you can do that on the
        command line like this:
                [1m$ [22mCXX='g++ -traditional' LIBS=-lposix ./configure
                [4m...lots[24m [4mof[24m [4moutput...[0m
                [1m$[0m
        Here are the [4mmake[24m variables that you might want to override with
        environment variables when running [4mconfigure[24m.

        Variable: CXX
                C++ compiler program.  The default is [4mc++[24m.

        Variable: CPPFLAGS
                Preprocessor flags, commonly defines and include search paths.
                Defaults to empty.  It is common to use
                CPPFLAGS=-I/usr/local/include to access other installed
                packages.

        Variable: INSTALL
                Program to use to install files.  The default is [4minstall[24m if
                you have it, [4mcp[24m otherwise.

        Variable: LIBS
                Libraries to link with, in the form -l[4mfoo[24m -l[4mbar[24m.  The
                [4mconfigure[24m script will append to this, rather than replace it.
                It is common to use LIBS=-L/usr/local/lib to access other
                installed packages.

        If you need to do unusual things to compile the package, the author
        encourages you to figure out how [4mconfigure[24m could check whether to do
        them, and mail diffs or instructions to the author so that they can be
        included in the next release.

[1mBUILDING SRECORD[0m
        All you should need to do is use the
                [1m% [22mmake
                [4m...lots[24m [4mof[24m [4moutput...[0m
                [1m%[0m
        command and wait.  When this finishes you should see a directory
        called [4mbin[24m containing three files: [4msrec_cat[24m, [4msrec_cmp[24m and [4msrec_info[24m.

        [1msrec_cat[0m
                [4msrec_cat[24m program is used to manipulate and convert EPROM load
                files.  For more information, see [4msrec_cat[24m(1).

        [1msrec_cmp[0m
                The [4msrec_cmp[24m program is used to compare EPROM load files.  For
                more information, see [4msrec_cmp[24m(1).

        [1msrec_info[0m
                The [4msrec_info[24m program is used to print information about EPROM
                load files.  For more information, see [4msrec_info[24m(1).

        If you have GNU Groff installed, the build will also create a
        [4metc/reference.ps[24m file.  This contains the README file, this BUILDING
        file, and all of the man pages.

        You can remove the program binaries and object files from the source
        directory by using the
                [1m% [22mmake clean
                [4m...lots[24m [4mof[24m [4moutput...[0m
                [1m%[0m
        command.  To remove all of the above files, and also remove the
        [4mMakefile[24m and [4minclude/config.h[24m and [4mconfig.status[24m files, use the
                [1m% [22mmake distclean
                [4m...lots[24m [4mof[24m [4moutput...[0m
                [1m%[0m
        command.

        The file [4metc/configure.in[24m is used to create [4mconfigure[24m by a GNU program
        called [4mautoconf[24m.  You only need to know this if you want to regenerate
        [4mconfigure[24m using a newer version of [4mautoconf[24m.

   [1mWindows NT[0m
        It is possible to build SRecord on MS Windows platforms, using the
        Cygwin (see www.cygwin.com) or DJGPP (see www.delorie.com/djgpp)
        environments.  This provides the ``porting layer'' necessary to run
        Unix programs on Windows.  The build process is exactly as described
        above.

        [1mNote: [22mif you are using GCC 3.[4mx[24m, you may need to edit the [4mMakefile[24m to
        change CXX = g++ to read CXX = g++-2 to fix some weird undefined
        symbols.  This appears to be a GCC bug.

        DJGPP always produces native binaries, however if you want to make
        native binaries with Cygwin ([4mi.e.[24m ones which work outside Cygwin)
        there is one extra step you need after running ./configure and before
        you run make.  You need to edit the [4mMakefile[24m file, and add -mno-cygwin
        to the end of the CXX=g++ line.

        Once built (using either tool set) Windows binaries should be testable
        in the same way as described in the next section.  However, there may
        be some CRLF issues in the text file comparisons which give false
        negatives, depending on the CRLF setting of your Cygwin file system
        when you unpacked the tarball.

[1mTESTING SRECORD[0m
        The [4mSRecord[24m package comes with a test suite.  To run this test suite,
        use the command
                [1m% [22mmake sure
                [4m...lots[24m [4mof[24m [4moutput...[0m
                [1mPassed All Tests[0m
                [1m%[0m

        The tests take a few seconds each, with a few very fast, and a couple
        very slow, but it varies greatly depending on your CPU.

        If all went well, the message
                Passed All Tests
        should appear at the end of the make.

[1mINSTALLING SRECORD[0m
        As explained in the [4mSITE[24m [4mCONFIGURATION[24m section, above, the [4mSRecord[0m
        package is installed under the [4m/usr/local[24m tree by default.  Use the
        --prefix=[4mPATH[24m option to [4mconfigure[24m if you want some other path.  More
        specific installation locations are assignable, use the --help option
        to [4mconfigure[24m for details.

        All that is required to install the [4mSRecord[24m package is to use the
                [1m% [22mmake install
                [4m...lots[24m [4mof[24m [4moutput...[0m
                [1m%[0m
        command.  Control of the directories used may be found in the first
        few lines of the [4mMakefile[24m file and the other files written by the
        [4mconfigure[24m script; it is best to reconfigure using the [4mconfigure[0m
        script, rather than attempting to do this by hand.

[1mGETTING HELP[0m
        If you need assistance with the [4mSRecord[24m package, please do not
        hesitate to contact the author at
                Peter Miller <millerp@canb.auug.org.au>
        Any and all feedback is welcome.

        When reporting problems, please include the version number given by
        the
                [1m% [22msrec_cat -version
                [1msrecord version [4m[22m1.16.D002[0m
                [4m...warranty[24m [4mdisclaimer...[0m
                [1m%[0m
        command.  Please do not send this example; run the program for the
        exact version number.

[1mCOPYRIGHT[0m
        [4msrecord[24m version 1.16
        Copyright (C) 1998, 1999, 2000, 2001, 2002, 2003 Peter Miller; All
        rights reserved.

        The [4mSRecord[24m package is distributed in the hope that it will be useful,
        but WITHOUT ANY WARRANTY; without even the implied warranty of
        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
        General Public License for more details.

        It should be in the [4mLICENSE[24m file included with this distribution.

[1mAUTHOR[0m
        Peter Miller   E-Mail:   millerp@canb.auug.org.au
        /\/\*             WWW:   http://www.canb.auug.org.au/~millerp/



Reference Manual                    SRecord                     Build(SRecord)
