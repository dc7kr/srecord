/*
 *	srecord - manipulate eprom load files
 *	Copyright (C) 1998, 2002 Peter Miller;
 *	All rights reserved.
 *
 *	This program is free software; you can redistribute it and/or modify
 *	it under the terms of the GNU General Public License as published by
 *	the Free Software Foundation; either version 2 of the License, or
 *	(at your option) any later version.
 *
 *	This program is distributed in the hope that it will be useful,
 *	but WITHOUT ANY WARRANTY; without even the implied warranty of
 *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *	GNU General Public License for more details.
 *
 *	You should have received a copy of the GNU General Public License
 *	along with this program; if not, write to the Free Software
 *	Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111, USA.
 *
 * MANIFEST: instructions to cook, how to use GNU Autoconf
 */


/*
 * This file is generated by autoconf.
 * It is architecture specific.
 * If it is not found (not cooked yet) the following
 * symbols will be undefined.
 *
 *	Must be included *after* the search_list is defined.
 */
#include-cooked-nowarn [arch]/etc/Howto.conf
if [not [defined prefix]] then
	prefix = /usr/local;
if [not [defined exec_prefix]] then
	exec_prefix = [prefix];
if [not [defined yacc]] then
	yacc = yacc;
if [not [defined libs]] then
	libs = ;
if [not [defined cxx]] then
	cxx = ['if' [find_command g++] 'then' g++ 'else' c++];


configure: etc/configure.in install-sh
{
	if [not [exists install-sh]] then
	{
		/*
		 * Cook says it is up-to-date, so it must be in the
		 * baseline; autoconf needs it in the current directory.
		 */
		cp [resolve install-sh] .
			set clearstat;
	}
	autoconf [resolve etc/configure.in] > [target];
	chmod 755 [target];
}

/*
 * Different Linux install methods put the packages in different places.
 * We need to find the autoconf package to get the linstall-sh script.
 */
if [exists /usr/share/autoconf/install-sh] then
	install-sh = /usr/share/autoconf/install-sh;
else if [exists /usr/lib/autoconf/install-sh] then
	install-sh = /usr/lib/autoconf/install-sh;
else if [exists /usr/local/share/autoconf/install-sh] then
	install-sh = /usr/local/share/autoconf/install-sh;
else if [exists /usr/local/lib/autoconf/install-sh] then
	install-sh = /usr/local/lib/autoconf/install-sh;

install-sh: [install-sh]
{
	cp [need] [target];
	chmod 755 [target];
}


[arch]/config.status: configure install-sh
{
	if [not [exists install-sh]] then
	{
		/*
		 * Cook says it is up-to-date, so it must be in the
		 * baseline; autoconf needs it in the current directory.
		 */
		cp [resolve install-sh] .
			set clearstat;
	}
	./[resolve configure] --cache-file\=/dev/null --verbose --no-create;
	mv config.status [arch]/config.status;
	if [exists config.log] then
		mv config.log [arch]/config.log;
}

include/config.h.in: etc/configure.in
{
	autoheader [resolve etc/configure.in] > [target];
}


[arch]/%0%.h: %0%.h.in [arch]/config.status
	single-thread conftest.subs
{
	CONFIG_FILES\= CONFIG_HEADERS\=[target]\:[resolve %0%.h.in]
		[resolve [arch]/config.status];
}

[arch]/%0%: %0%.in [arch]/config.status
	single-thread conftest.subs
{
	CONFIG_FILES\=[target]\:[resolve %0%.in] CONFIG_HEADERS\=
		[resolve [arch]/config.status];
}

/* Sigh */
cascade lib/common/vsnprintf.cc = [arch]/include/config.h;
