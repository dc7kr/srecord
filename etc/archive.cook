/*
 *      srecord - manipulate eprom load files
 *      Copyright (C) 1998-2000, 2003, 2004, 2006-2008 Peter Miller
 *
 *      This program is free software; you can redistribute it and/or modify
 *      it under the terms of the GNU General Public License as published by
 *      the Free Software Foundation; either version 3 of the License, or
 *      (at your option) any later version.
 *
 *      This program is distributed in the hope that it will be useful,
 *      but WITHOUT ANY WARRANTY; without even the implied warranty of
 *      MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *      GNU General Public License for more details.
 *
 *      You should have received a copy of the GNU General Public License
 *      along with this program. If not, see
 *      <http://www.gnu.org/licenses/>.
 */

integration-build-targets:
        archive/change_log.txt
        archive/[project_minus].README
        archive/[project_minus].lsm
        archive/[project_minus].spec
        archive/[project_minus].tar.gz
        archive/[project_minus].pdf
        archive/[project_short].png
        archive/[project_short].ico
        archive/[project_short]-128.png
        archive/[project_short]-64.png
        archive/[project_short]-32.png
        archive/[project_short]-16.png
        [fromto etc/%.html archive/%.html
            [match_mask etc/%.html [source_files]]
        ]
        ;

source_file_order =
        README
        [sort
                [stringset
                        [source_files]
                        BUILDING
                        LICENSE

                        /*
                         * These two are for time stamping the distribution.
                         */
                        etc/version.so
                        lib/patchlevel.h

                        /*
                         * These four are for building the distribution.
                         */
                        Makefile.in
                        lib/config.h.in
                        install-sh
                        configure

                        /*
                         * This is for building the RPM package
                         */
                        [project_minus].spec

                        /*
                         * for the reference manual
                         */
                        etc/ref-index.so
                        etc/ref-parts.so
                        etc/new.so
                -
                        README
                ]
        ]
        ;


/*
 * These recipes build a Makefile for a user.  They do not build a
 * Makefile useful for a development build, because no arch
 * information is included in the Makefile.
 */

aemakegen = aemakegen;

Makefile.in: [source_files]
{
    [aemakegen] -p [project] -c [change] > [target].tmp
        set meter;
    [awk] -f [resolve etc/Makefile.awk] < [target].tmp > [target];
    rm [target].tmp
        set silent;
}

archive/[project_minus].tar.gz: [source_file_order]
        set shallow
{
        tar cf - [resolve [source_file_order]]
                | tardy
                        -una Peter -gna Miller
                        -unu 0 -gnu 0
                        -ms 0644 -mc 07022
                        -now
                        -prefix\=[project_minus]
                        [prepost "-rp=" "" [search_list]]
                | gzip -9
                > [target];
}

archive/[project_minus].%: %
        set shallow
{
        cat [resolve [need]] > [target];
}

archive/[project_minus].pdf: etc/reference.pdf
        set shallow
{
        cat [resolve [need]] > [target];
}

%: etc/%.man
{
        roffpp
                [prepost "-I" /[arch] [search_list]]
                [addprefix "-I" [search_list]]
                [resolve etc/%.man]
        | groff -Tascii -t -P-bcu -man
        > [target];
}

archive/%.txt: etc/%.man
    set shallow
{
        roffpp
                [prepost "-I" /[arch] [search_list]]
                [addprefix "-I" [search_list]]
                [resolve etc/%.man]
        | groff -Tascii -t -P-bcu -man
        > [target];
}

etc/%.man.d: etc/%.man
        set no-cascade
{
        [c_incl] -nc -ns -api -nrec
                --lang\=roff
                [addprefix "-I" [search_list]]
                [resolve etc/%.man]
                -prefix "'cascade etc/%.man ='"
                -suffix "';'"
                [addprefix "-rlp=" [search_list]]
                -o [target];
}

#include-cooked [addsuffix ".d" [match_mask etc/%.man [source_files]]]


/*
 * This is not in the integration-build-targets because it takes far
 * too long to do.
 */

RPM: archive/[project_minus]-1.i386.rpm;

archive/[project_minus]-1.i386.rpm archive/[project_minus]-1.src.rpm:
                archive/[project_minus].tar.gz etc/rpm-build.sh
        set shallow
{
        sh [resolve etc/rpm-build.sh]
                RPM-temporary
                [resolve archive/[project_minus].tar.gz]
                ;
        mv RPM-temporary/RPMS/i386/[project_minus]-1.i386.rpm
                archive/[project_minus]-1.i386.rpm
                ;
        mv RPM-temporary/SRPMS/[project_minus]-1.src.rpm
                archive/[project_minus]-1.src.rpm
                ;
        rm -r RPM-temporary;
}

[project_minus].spec: etc/spec.sh [source_files]
{
        version\=[version_short]
        sh [resolve etc/spec.sh] [source_files]
                > [target];
}

archive/[project_minus].spec: [project_minus].spec
        set shallow
{
        cat [resolve [need]] > [target];
}

archive/%: etc/%.uue
        set shallow
{
        uudecode -o [target] [resolve [need]];
}


etc/%.html.d: etc/%.html
        set no-cascade
{
        c_incl -nc -ns -eia -r -nrec
                [prepost "-I" /[arch] [search_list]]
                [addprefix "-I" [search_list]]
                -prefix "'cascade etc/"%".html ='"
                -suffix "';'"
                [resolve etc/%.html]
                [prepost "-rlp=" "" [search_list]] /* remove leading path */
                -slp [arch] "'[arch]'" /* substitute leading path */
                -o [target];
}

#include-cooked [addsuffix ".d" [match_mask etc/%.html [source_files]]]

archive/%.html: etc/%.html etc/ssp.awk
        set shallow
{
        roffpp
                [prepost "-I" /[arch] [search_list]]
                [addprefix "-I" [search_list]]
                [resolve etc/%.html]
        | groff -Tascii -t -P-bcu -man
        | [awk] -f [resolve etc/ssp.awk]
        > [target];
}


etc/[project_short].lsm.d: etc/[project_short].lsm
        set no-cascade
{
        c_incl -nc -ns -eia -r -nrec
                [prepost "-I" /[arch] [search_list]]
                [addprefix "-I" [search_list]]
                -prefix "'cascade etc/"[project_short]".lsm ='"
                -suffix "';'"
                [resolve etc/[project_short].lsm]
                [prepost "-rlp=" "" [search_list]] /* remove leading path */
                -slp [arch] "'[arch]'" /* substitute leading path */
                -o [target];
}

#include-cooked-nowarn etc/[project_short].lsm.d

archive/[project_minus].lsm: etc/[project_short].lsm etc/ssp.awk
        set shallow
{
        roffpp
                [prepost "-I" /[arch] [search_list]]
                [addprefix "-I" [search_list]]
                [resolve etc/[project_short].lsm]
        | groff -Tascii -t -P-bcu -man
        | [awk] -f [resolve etc/ssp.awk]
        > [target];
}

LICENSE: man/cat1/srec_license.1
{
        cat [resolve [need]] > [target];
}

archive/%1-%2.png: archive/%1.png
{
    if [find_command pngcrush] then
    {
        convert [resolve archive/%1.png] -scale %2 [target].tmp;
        pngcrush -bkgd 255 255 255 -brute -q [target].tmp [target];
        rm [target].tmp;
    }
    else
    {
        convert [resolve archive/%1.png] -scale %2 [target];
    }
}

archive/srecord.ico:
    archive/srecord-16.png
    archive/srecord-24.png
    archive/srecord-32.png
    archive/srecord-48.png
    archive/srecord-64.png
    archive/srecord-96.png
    archive/srecord-128.png
{
    png2ico [target] [resolve [need]];
}


check-tarball: etc/check-tarball.sh archive/[project_minus].tar.gz
{
    sh [resolve etc/check-tarball.sh archive/[project_minus].tar.gz];
}
